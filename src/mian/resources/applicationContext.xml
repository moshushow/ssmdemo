<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	   	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
      	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- 扫描service及dao -->
	<context:component-scan base-package="com.zhangb">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:annotation-driven>
		<mvc:message-converters><!-- 对中文乱码进行处理 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>*/*;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>*/*;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<task:annotation-driven />

	<!-- <util:properties id="properties" local-override="true" location="classpath:common.properties"/> -->
	<!-- 加载配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:dataType.properties</value>
				<value>classpath:activemq.properties</value>
			</list>
		</property>
	</bean>

	<!--创建jdbc数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true" />
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}" />
		<property name="initialPoolSize" value="${cpool.minPoolSize}" />
		<property name="minPoolSize" value="${cpool.minPoolSize}" />
		<property name="maxPoolSize" value="${cpool.maxPoolSize}" />
		<property name="maxIdleTime" value="${cpool.maxIdleTime}" />
		<property name="acquireIncrement" value="${cpool.acquireIncrement}" />
		<property name="maxIdleTimeExcessConnections" value="${cpool.maxIdleTimeExcessConnections}" />
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven proxy-target-class="false"
		transaction-manager="transactionManager" />

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mappings/*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zhangb.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 创建sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!--activateMQ配置 -->
  <!-- 	<bean id="jmsFactory" class="org.apache.activemq.jms.pool.PooledConnectionFactory">
  		<property name="connectionFactory">
  			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
  				<property name="brokerURL">
  					<value>failover:(tcp://${mq.server})</value>
  				</property>
  			</bean>
  		</property>
  	</bean> -->
  	
  	<!-- <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
  		<property name="connectionFactory" ref="jmsFactory"/>
  	</bean> -->
  	
  	<!-- com.run.framework.spring.activemq.ActiveMQUtil属性填充 -->
  	<!-- <bean class="com.run.framework.spring.activemq.ActiveMQUtil">
  		<property name="jmsTemplate" ref="jmsTemplate"></property>
  		<property name="heartbeatTopic" value="${heartbeat.topic}"/>
  		<property name="commandTopic" value="${command.topic}"/>
  		<property name="heartbeatInterval" value="${heartbeat.interval}"/>
  		<property name="monitorProduceTopic" value="${monitor.produce.topic}"/>
  		<property name="callbackListenerTopic" value="${callback.listener.topic}"/>
  	</bean> -->
  	
  	<!-- web启动时自动开启心跳接收线程 -->
  	<!-- <bean class="com.run.framework.spring.activemq.ActiveMQInterface" init-method="init"></bean> -->

</beans>
